{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Abhayas Assessment\\\\frontend\\\\src\\\\component\\\\SearchSection.jsx\";\nimport { WatchList } from './exportfiles';\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class SearchSection extends Component {\n  constructor() {\n    super(); //Define state for value and suggestion collection\n\n    this.getSuggestions = async value => {\n      const inputValue = value.trim().toLowerCase();\n      let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=a591bb53\");\n      let data = await response.json();\n      return data;\n    };\n\n    this.getSuggestionValue = suggestion => suggestion.Title;\n\n    this.renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sugg-option\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        children: suggestion.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n\n    this.onChange = (event, _ref) => {\n      let {\n        newValue\n      } = _ref;\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = _ref2 => {\n      let {\n        value\n      } = _ref2;\n      this.getSuggestions(value).then(data => {\n        if (data.Error) {\n          this.setState({\n            suggestions: []\n          });\n        } else {\n          this.setState({\n            suggestions: data.Search\n          });\n        }\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  } // database\n  // handleSubmit(){\n  //   let databody = {\n  //       \"name\": this.state.nameIn\n  //   }\n  //   return fetch('http://localhost:5000/', {\n  //       method: 'POST',\n  //       body: JSON.stringify(databody),\n  //       headers: {\n  //           'Content-Type': 'application/json'\n  //       },\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => console.log(data)); \n  // }\n  // Filter logic\n\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state; // Option props\n\n    const inputProps = {\n      placeholder: 'Type movie name',\n      value,\n      onChange: this.onChange,\n      style: \"paddingRight:50px\"\n    }; // Adding AutoSuggest component\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      style: {\n        marginLeft: \"15px\",\n        marginTop: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WatchList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default SearchSection;","map":{"version":3,"sources":["C:/Users/admin/Desktop/Abhayas Assessment/frontend/src/component/SearchSection.jsx"],"names":["WatchList","React","Component","Autosuggest","SearchSection","constructor","getSuggestions","value","inputValue","trim","toLowerCase","response","fetch","data","json","getSuggestionValue","suggestion","Title","renderSuggestion","onChange","event","newValue","setState","onSuggestionsFetchRequested","then","Error","suggestions","Search","onSuggestionsClearRequested","state","render","inputProps","placeholder","style","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import { WatchList } from './exportfiles'\r\nimport React, { Component } from 'react'\r\nimport Autosuggest from 'react-autosuggest';\r\nexport class SearchSection extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    //Define state for value and suggestion collection\r\n    this.state = {\r\n        value: '',\r\n        suggestions: []\r\n    };\r\n}\r\n\r\n// database\r\n\r\n// handleSubmit(){\r\n//   let databody = {\r\n//       \"name\": this.state.nameIn\r\n//   }\r\n\r\n//   return fetch('http://localhost:5000/', {\r\n//       method: 'POST',\r\n//       body: JSON.stringify(databody),\r\n//       headers: {\r\n//           'Content-Type': 'application/json'\r\n//       },\r\n//   })\r\n//   .then(res => res.json())\r\n//   .then(data => console.log(data)); \r\n// }\r\n\r\n// Filter logic\r\ngetSuggestions = async (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=a591bb53\");\r\n    let data = await response.json()\r\n    return data;\r\n};\r\n\r\n// Trigger suggestions\r\ngetSuggestionValue = suggestion => suggestion.Title;\r\n\r\n// Render Each Option\r\nrenderSuggestion = suggestion => (\r\n     \r\n    <span className=\"sugg-option\">\r\n       \r\n        <span className=\"name\">\r\n            {suggestion.Title}\r\n        </span>\r\n    </span>\r\n    \r\n);\r\n\r\n// OnChange event handler\r\nonChange = (event, { newValue }) => {\r\n    this.setState({\r\n        value: newValue\r\n        \r\n    });\r\n};\r\n// Suggestion rerender when user types\r\nonSuggestionsFetchRequested = ({ value }) => {\r\n    this.getSuggestions(value)\r\n        .then(data => {\r\n            if (data.Error) {\r\n                this.setState({\r\n                    suggestions: []\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    suggestions: data.Search\r\n                });\r\n            }\r\n        })\r\n};\r\n\r\n// Triggered on clear\r\nonSuggestionsClearRequested = () => {\r\n    this.setState({\r\n        suggestions: []\r\n    });\r\n};\r\n\r\nrender() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Option props\r\n    const inputProps = {\r\n        placeholder: 'Type movie name',\r\n        value,\r\n        onChange: this.onChange,\r\n        style:\"paddingRight:50px\"\r\n    };\r\n\r\n    // Adding AutoSuggest component\r\n    return (\r\n      <div className=\"col-md-3\" style={{ marginLeft: \"15px\", marginTop: \"15px\" }}>\r\n        <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={this.getSuggestionValue}\r\n            renderSuggestion={this.renderSuggestion}\r\n            inputProps={inputProps}\r\n        />\r\n        <WatchList/>\r\n        </div>\r\n    );\r\n}\r\n\r\n}\r\n\r\nexport default SearchSection"]},"metadata":{},"sourceType":"module"}
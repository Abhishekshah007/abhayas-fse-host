{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Abhayas Assessment\\\\frontend\\\\src\\\\component\\\\context\\\\Notecontext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noteContext = /*#__PURE__*/createContext(); // ----------------------------------\n\nconst NoteState = props => {\n  _s();\n\n  const hostname = \"http://localhost:5000/\";\n  const notesNumber = [];\n  const [notes, setNotes] = useState(notesNumber); // delete a note\n\n  const deleteNote = async id => {\n    const response = await fetch(`${hostname}remove/${id}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // update a note\n\n\n  const updateNote = async (id, title, desc) => {\n    const response = await fetch(`${hostname}edit/${id}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        desc\n      })\n    });\n    const json = await response.json();\n    let newUpdateValue = JSON.parse(JSON.stringify(notes));\n\n    for (let index = 0; index < newUpdateValue; index++) {\n      const element = newUpdateValue[index];\n\n      if (element._id === id) {\n        newUpdateValue[index].title = title;\n        newUpdateValue[index].desc = desc;\n        break;\n      }\n    }\n\n    setNotes(newUpdateValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      deleteNote,\n      updateNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}; // ----------------------------------------\n\n\n_s(NoteState, \"xNgDp8jULq1a9t/hxkpoKinwo00=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Abhayas Assessment/frontend/src/component/context/Notecontext.js"],"names":["React","createContext","useState","noteContext","NoteState","props","hostname","notesNumber","notes","setNotes","deleteNote","id","response","fetch","method","headers","json","console","log","newNotes","filter","note","_id","updateNote","title","desc","body","JSON","stringify","newUpdateValue","parse","index","element","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA6BC,QAA7B,QAA6C,OAA7C;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC,C,CAEA;;AAGA,MAAMG,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,QAAQ,GAAE,wBAAhB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,WAAD,CAAlC,CAH2B,CAO3B;;AACA,QAAMG,UAAU,GAAE,MAAMC,EAAN,IAAW;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,UAASK,EAAG,EAAzB,EAA2B;AACrDG,MAAAA,MAAM,EAAC,KAD8C;AAErDC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AAF6C,KAA3B,CAA5B;AAOH,UAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAED,UAAMG,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAQ;AACpC,aAAOA,IAAI,CAACC,GAAL,KAAYX,EAAnB;AACD,KAFgB,CAAjB;AAGAF,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACG,GAfD,CAR2B,CAyB3B;;;AACA,QAAMI,UAAU,GAAE,OAAOZ,EAAP,EAAUa,KAAV,EAAgBC,IAAhB,KAAuB;AAEvC,UAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,QAAOK,EAAG,EAAvB,EAAyB;AACnDG,MAAAA,MAAM,EAAC,MAD4C;AAEnDC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT,OAF2C;AAMnDW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACJ,QAAAA,KAAD;AAAOC,QAAAA;AAAP,OAAf;AAN6C,KAAzB,CAA5B;AASA,UAAMT,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;AAGJ,QAAIa,cAAc,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACC,SAAL,CAAepB,KAAf,CAAX,CAArB;;AACA,SAAK,IAAIuB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,cAA5B,EAA4CE,KAAK,EAAjD,EAAqD;AACnD,YAAMC,OAAO,GAAGH,cAAc,CAACE,KAAD,CAA9B;;AACA,UAAGC,OAAO,CAACV,GAAR,KAAcX,EAAjB,EAAoB;AAClBkB,QAAAA,cAAc,CAACE,KAAD,CAAd,CAAsBP,KAAtB,GAA4BA,KAA5B;AACAK,QAAAA,cAAc,CAACE,KAAD,CAAd,CAAsBN,IAAtB,GAA2BA,IAA3B;AAEA;AACD;AACF;;AACDhB,IAAAA,QAAQ,CAAEoB,cAAF,CAAR;AACG,GAzBD;;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAErB,MAAAA,KAAF;AAAQE,MAAAA,UAAR;AAAmBa,MAAAA;AAAnB,KAA7B;AAAA,cACGlB,KAAK,CAAC4B;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1DD,C,CA8DA;;;GA9DM7B,S;;KAAAA,S;AA+DN,eAAeA,SAAf","sourcesContent":["import React, {createContext,useState } from \"react\";\r\n\r\nconst noteContext = createContext();\r\n\r\n// ----------------------------------\r\n\r\n\r\nconst NoteState = (props) => {\r\n  const hostname =\"http://localhost:5000/\";\r\n  const notesNumber = [];\r\n  const [notes, setNotes] = useState(notesNumber);\r\n\r\n\r\n\r\n  // delete a note\r\n  const deleteNote= async(id)=>{\r\n    const response = await fetch(`${hostname}remove/${id}`,{\r\n      method:'GET',\r\n      headers:{\r\n        'content-type':'application/json',\r\n       \r\n      },\r\n    });\r\n const json = response.json();\r\n console.log(json);\r\n\r\nconst newNotes = notes.filter((note)=>{\r\n  return note._id !==id;\r\n});\r\nsetNotes(newNotes)\r\n  }\r\n\r\n  // update a note\r\n  const updateNote= async (id,title,desc)=>{\r\n\r\n    const response = await fetch(`${hostname}edit/${id}`,{\r\n      method:'POST',\r\n      headers:{\r\n        'content-type':'application/json',\r\n        \r\n      },\r\n      body: JSON.stringify({title,desc})\r\n    \r\n    });\r\n    const json = await response.json();\r\n    \r\n\r\nlet newUpdateValue = JSON.parse(JSON.stringify(notes));\r\nfor (let index = 0; index < newUpdateValue; index++) {\r\n  const element = newUpdateValue[index];\r\n  if(element._id===id){\r\n    newUpdateValue[index].title=title;\r\n    newUpdateValue[index].desc=desc;\r\n    \r\n    break;\r\n  }\r\n}\r\nsetNotes( newUpdateValue)\r\n  }\r\n\r\n  return (\r\n    <noteContext.Provider value={{ notes,deleteNote,updateNote }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  )\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------\r\nexport default NoteState;"]},"metadata":{},"sourceType":"module"}